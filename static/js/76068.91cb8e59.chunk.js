"use strict";(self.webpackChunksc_land=self.webpackChunksc_land||[]).push([[76068],{76068:(e,t,a)=>{a.r(t),a.d(t,{default:()=>p});var s,r=a(35143),i=a(3825),n=a(50076),l=a(46053),o=(a(81806),a(76460),a(47249),a(85842)),d=a(25515),c=a(65624),m=a(21617),g=a(5682);let h=s=class extends((0,c.dM)((0,g.j)((0,m.J)(d.default)))){constructor(){super(...arguments),this.type="base-dynamic"}getImageUrl(){throw new n.default("basedynamiclayer:getImageUrl-not-implemented","getImageUrl() is not implemented")}addResolvingPromise(e){super.addResolvingPromise(e)}async fetchImage(e,t,a,s){const r=this.getImageUrl(e,t,a),n={responseType:"image",signal:s?.signal,query:{...this.refreshParameters}};if("string"==typeof r){const{data:e}=await(0,i.default)(r,n);return e}const l=await r,{data:o}=await(0,i.default)(l,n);return o}async fetchImageBitmap(e,t,a){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(this.fetchImage!==s.prototype.fetchImage){const s=await this.fetchImage(e,t,a,r);try{return await createImageBitmap(s)}catch(p){throw new n.default("request:server","Unable to load image",{error:p,extent:e,width:t,height:a})}}const l=this.getImageUrl(e,t,a),o={responseType:"blob",signal:r?.signal,query:{...this.refreshParameters}};if("string"==typeof l){const{data:e}=await(0,i.default)(l,o);return createImageBitmap(e)}const d=await l,{data:c}=await(0,i.default)(d,o);return createImageBitmap(c)}};(0,r._)([(0,l.MZ)({readOnly:!0,value:"base-dynamic"})],h.prototype,"type",void 0),(0,r._)([(0,l.MZ)({type:["show","hide"]})],h.prototype,"listMode",void 0),h=s=(0,r._)([(0,o.$)("esri.layers.BaseDynamicLayer")],h);const p=h}}]);
//# sourceMappingURL=76068.91cb8e59.chunk.js.map