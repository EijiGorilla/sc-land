"use strict";(self.webpackChunksc_land=self.webpackChunksc_land||[]).push([[5430],{5430:(e,t,o)=>{o.r(t),o.d(t,{default:()=>f});var a=o(35143),i=o(50076),l=o(46053),n=(o(81806),o(76460),o(47249),o(85842)),r=o(76797),s=o(13312),d=o(2413),u=o(25515),p=o(88235);const c=new(o(11164).U)("0/0/0",0,0,0,void 0);let v=class extends u.default{constructor(){super(...arguments),this.tileInfo=p.default.create({spatialReference:s.default.WebMercator,size:256}),this.fullExtent=new r.default(-20037508.342787,-20037508.34278,20037508.34278,20037508.342787,s.default.WebMercator),this.spatialReference=s.default.WebMercator,this.type="base-elevation"}addResolvingPromise(e){super.addResolvingPromise(e)}getTileBounds(e,t,o,a){const i=a||d.v_;return c.level=e,c.row=t,c.col=o,c.extent=i,this.tileInfo.updateTileInfo(c),c.extent=void 0,i}fetchTile(){throw new i.default("BaseElevationLayer:fetchTile-not-implemented","fetchTile() is not implemented")}async queryElevation(e,t){const{ElevationQuery:o}=await this._importElevationQuery();return(new o).query(this,e,t)}createElevationSampler(e,t){return this._importElevationQuery().then((o=>(new o.ElevationQuery).createSampler(this,e,t)))}_importElevationQuery(){return o.e(18722).then(o.bind(o,18722))}};(0,a._)([(0,l.MZ)({type:p.default})],v.prototype,"tileInfo",void 0),(0,a._)([(0,l.MZ)({type:["show","hide"]})],v.prototype,"listMode",void 0),(0,a._)([(0,l.MZ)()],v.prototype,"fullExtent",void 0),(0,a._)([(0,l.MZ)()],v.prototype,"spatialReference",void 0),(0,a._)([(0,l.MZ)({readOnly:!0,value:"base-elevation"})],v.prototype,"type",void 0),v=(0,a._)([(0,n.$)("esri.layers.BaseElevationLayer")],v);const f=v}}]);
//# sourceMappingURL=5430.2d3b69b1.chunk.js.map