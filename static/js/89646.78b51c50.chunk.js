"use strict";(self.webpackChunksc_land=self.webpackChunksc_land||[]).push([[89646],{89646:(e,t,n)=>{n.d(t,{$h:()=>h,Ef:()=>C,IP:()=>R,P1:()=>z,hF:()=>q,jQ:()=>w,rT:()=>S,rZ:()=>r,uR:()=>b});var r,i,a=n(73582),l=n(24648),o=n(31633),c=n(19555),s=n(72745),u=n(20664),g=n(9392),v=n(14487),d=n(7137),f=n(80963);function h(e,t){if(null==e||null==t)return;const n=p(e,t);return null!=n?(0,l.Wq)(n,"radians","geographic"):void 0}(i=r||(r={})).Absolute="absolute",i.Relative="relative",i.RelativeBilateral="relative-bilateral";const p=(()=>{const e=(0,g.vt)(),t=(0,g.vt)();return(n,r)=>((0,u.i)(e,n.x,n.y,n.z??0),(0,u.i)(t,r.x,r.y,r.z??0),R(e,t,n.spatialReference,r.spatialReference))})(),R=(()=>{const e=(0,s.vt)(),t=(0,g.vt)(),n=(0,g.vt)();return(r,i,a,l)=>{if((0,u.p)(r,i))return;const g=(0,d.geodesicCompatibleSpatialReference)(a),h=(0,d.geodesicCompatibleSpatialReference)(l);if(g&&h&&(0,f.aI)(g,h)&&(0,v.F)(r,a,t,g)&&(0,v.F)(i,l,n,h)){const{azimuth:e}=(0,d.inverseGeodeticSolver)(W,t,n,g);return null!=e?(0,o.oU)(e,"degrees","radians"):void 0}e[0]=i[0]-r[0],e[1]=i[1]-r[1];let p=(0,c.g7)(s.JP,e);return e[0]<0&&(p=k-p),p}})();function b(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:r.Absolute;if(t&&n)switch(i){case r.Absolute:return h(t,n);case r.Relative:return w(m(e,t,n),r.Relative);case r.RelativeBilateral:return w(m(e,t,n),r.RelativeBilateral)}}function m(e,t,n){if(!e||!t||!n)return;const r=p(e,t),i=p(t,n);return null!=r&&null!=i?(0,l.Wq)(i-r,"radians","geographic"):void 0}function w(e,t){if(null!=e)switch(t){case r.Absolute:return z(e);case r.Relative:{const t=q(e);let n=A.normalize(t,0,!0);return-180===n&&(n=180),(0,l.Wq)(n,"degrees","geographic")}case r.RelativeBilateral:{const t=q(e),n=Math.abs(A.normalize(t,0,!0));return(0,l.Wq)(n,"degrees","geographic")}}}function z(e){const t=q(e),n=y.normalize(t,0,!0);return(0,l.Wq)(n,"degrees","geographic")}const S=(()=>{const e=(0,g.vt)();return function(t,n,r,i,a){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"geodesic";(0,u.c)(e,n);const s=q(a);if("geodesic"===c){const a=(0,d.geodesicCompatibleSpatialReference)(r);if(a&&(0,v.F)(e,r,e,a))return(0,d.directGeodeticSolver)(t,e,s,i,a),t[2]=n[2],!!(0,v.F)(t,a,t,r)}const g=(0,l.g2)(s,"geographic","arithmetic"),f=(0,o.oU)(g,"degrees","radians"),h=n[0]+i*Math.cos(f),p=n[1]+i*Math.sin(f),R=n[2];return(0,u.i)(t,h,p,R),!0}})();function q(e){if(null!=e)return(0,l.g2)(F(e),e.rotationType,"geographic")}function C(e){if(null!=e)return(0,l.g2)(F(e),e.rotationType,"arithmetic")}function F(e){return(0,o.oU)(e.value,e.unit,"degrees")}const W=new d.InverseGeodeticSolverResult,k=2*Math.PI,y=a.ie,A=new a.hr(-180,180)}}]);
//# sourceMappingURL=89646.78b51c50.chunk.js.map