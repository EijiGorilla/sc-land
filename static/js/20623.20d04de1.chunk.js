"use strict";(self.webpackChunksc_land=self.webpackChunksc_land||[]).push([[20623],{20623:(e,t,s)=>{s.r(t),s.d(t,{execute:()=>r});var a=s(50076);function r(e,t){let s=t.responseType;s?"array-buffer"!==s&&"blob"!==s&&"json"!==s&&"native"!==s&&"native-request-init"!==s&&"text"!==s&&(s="text"):s="json",t.responseType=s;const r=t.signal;return delete t.signal,globalThis.invokeStaticMessage("request",{url:e,options:t},{signal:r}).then((async n=>{let l,u,o,i,c;if(n.data)if(n.data instanceof ArrayBuffer){if(!("json"!==s&&"text"!==s&&"blob"!==s||(l=new Blob([n.data]),"json"!==s&&"text"!==s||(i=await l.text(),"json"!==s)))){try{u=JSON.parse(i||null)}catch(f){const s={...f,url:e,requestOptions:t};throw new a.default("request:server",f.message,s)}if(u.error){const s={...u.error,url:e,requestOptions:t};throw new a.default("request:server",u.error.message,s)}}}else"native"===s&&(n.data.signal=r,o=await fetch(n.data.url,n.data),n.httpStatus=o.status);switch(s){case"blob":c=l;break;case"json":c=u;break;case"native":c=o;break;case"text":c=i;break;default:c=n.data}return{data:c,httpStatus:n.httpStatus,requestOptions:t,ssl:n.ssl,url:e}}))}}}]);
//# sourceMappingURL=20623.20d04de1.chunk.js.map