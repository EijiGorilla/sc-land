"use strict";(self.webpackChunksc_land=self.webpackChunksc_land||[]).push([[58369],{58369:(e,t,o)=>{o.r(t),o.d(t,{default:()=>f});var r=o(35143),s=o(69098),p=o(42553),n=o(46053),a=(o(81806),o(76460),o(47249),o(85842)),i=o(17707),l=o(13312),d=o(19902),u=o(31608);let y=class extends(s.A.ClonableMixin(p.A)){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(e,t,o){null!=e&&(t.geometryType=(0,d.getJsonType)(e),t[o]={...e.toJSON(),spatialReference:void 0})}};(0,r._)([(0,n.MZ)({types:u.yR,json:{read:d.fromJSON,write:!0}})],y.prototype,"geometry",void 0),(0,r._)([(0,i.K)("geometry")],y.prototype,"writeGeometry",null),(0,r._)([(0,n.MZ)({json:{write:!0}})],y.prototype,"rasterId",void 0),(0,r._)([(0,n.MZ)({type:l.default,json:{name:"outSR",write:!0}})],y.prototype,"outSpatialReference",void 0),(0,r._)([(0,n.MZ)({json:{name:"options.DOff",write:!0}})],y.prototype,"depthOffset",void 0),(0,r._)([(0,n.MZ)({json:{name:"options.Adjust",write:!0}})],y.prototype,"adjust",void 0),y=(0,r._)([(0,a.$)("esri.rest.support.ImageToMapParameters")],y);const f=y}}]);
//# sourceMappingURL=58369.6b171cc8.chunk.js.map