"use strict";(self.webpackChunksc_land=self.webpackChunksc_land||[]).push([[192],{192:(e,t,o)=>{o.r(t),o.d(t,{default:()=>h});var s=o(35143),r=o(69098),i=o(42553),n=o(46053),l=(o(81806),o(76460),o(47249),o(6409)),p=o(85842),a=o(17707),y=o(19902),u=o(31608),d=o(38432),m=o(59187);let c=class extends(r.A.ClonableMixin(i.A)){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(e,t,o){null!=e&&(t.geometryType=(0,y.getJsonType)(e),t[o]=JSON.stringify(e.toJSON()))}};(0,s._)([(0,n.MZ)({types:u.yR,json:{read:y.fromJSON,write:!0}})],c.prototype,"geometry",void 0),(0,s._)([(0,a.K)("geometry")],c.prototype,"writeGeometry",null),(0,s._)([(0,n.MZ)({json:{write:!0}})],c.prototype,"objectIds",void 0),(0,s._)([(0,l.e)(d.x,{ignoreUnknown:!1,name:"spatialRel"})],c.prototype,"spatialRelationship",void 0),(0,s._)([(0,n.MZ)({type:m.default,json:{name:"time",write:!0}})],c.prototype,"timeExtent",void 0),(0,s._)([(0,n.MZ)({type:String,json:{write:!0}})],c.prototype,"where",void 0),c=(0,s._)([(0,p.$)("esri.rest.support.ImageGPSInfoParameters")],c);const h=c}}]);
//# sourceMappingURL=192.d05d3e81.chunk.js.map